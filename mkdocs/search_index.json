{
    "docs": [
        {
            "location": "/",
            "text": "CiviCRM CSV Import Helper\n\n\nWhat problems does this help with?\n\n\n\n\n\n\nYou have a load of data to import as \ncontributions\n or \nactivities\n\n  (etc.) but because it came from an external source it doesn't have\n  CiviCRM Contact IDs in it.\n\n\n\n\n\n\nYou have contributions/activities to import for contacts that might not be in\n  your database yet.\n\n\n\n\n\n\nYou have data to import to \ncontacts\n but it's a bit of a mess and may\n  result in duplicates, even despite your expertise in using CiviCRM's dedupe\n  rules.\n\n\n\n\n\n\nYou have data to import but the first and last names are just in one 'name'\n  field instead separate fields.\n\n\n\n\n\n\nHow does it help?\n\n\nYou feed it a CSV (Comma-Separated Values) spreadsheet and it uses an\ninteractive process to help \nyou\n identify the contacts for each row. You can\nalso have it create contacts when you have decided they need to be.\n\n\nIt tries to be helpful by looking for matches for you, based on name and email.\nIf it finds a single matching contact it will auto-select that, otherwise it\nwill offer you options, e.g. \"Same email: Wilma Flintstone\", or \"Similar name:\nBetty Rubble\".\n\n\nAlso it only shows you distinct sets of first, last names and emails. So if your\ndata has a bunch of records from Wilma Flintstone, you'll only have to locate\nWilma once.\n\n\nWhen everything is matched up, you can download the CSV file again, which will\nbe the same file as you fed into it, but now it has an extra \"Internal ID\"\ncolumn with the CiviCRM Contact ID populated.\n\n\nThen\n you can use that in CiviCRM's normal import routines for contacts,\nactivities, contributions...\n\n\nSound good?\n\n\nSee \nInstallation\n and then jump across to \nUsage\n\n\nArtful Robot wrote this\n\n\nThat's me. I'm a UK based developer stitching together open source technologies\nto make websites and databases that help people and organisations change the world.\n\n\nYou can hire me if you like :-) My website's \nartfulrobot.uk",
            "title": "Home"
        },
        {
            "location": "/#civicrm-csv-import-helper",
            "text": "",
            "title": "CiviCRM CSV Import Helper"
        },
        {
            "location": "/#what-problems-does-this-help-with",
            "text": "You have a load of data to import as  contributions  or  activities \n  (etc.) but because it came from an external source it doesn't have\n  CiviCRM Contact IDs in it.    You have contributions/activities to import for contacts that might not be in\n  your database yet.    You have data to import to  contacts  but it's a bit of a mess and may\n  result in duplicates, even despite your expertise in using CiviCRM's dedupe\n  rules.    You have data to import but the first and last names are just in one 'name'\n  field instead separate fields.",
            "title": "What problems does this help with?"
        },
        {
            "location": "/#how-does-it-help",
            "text": "You feed it a CSV (Comma-Separated Values) spreadsheet and it uses an\ninteractive process to help  you  identify the contacts for each row. You can\nalso have it create contacts when you have decided they need to be.  It tries to be helpful by looking for matches for you, based on name and email.\nIf it finds a single matching contact it will auto-select that, otherwise it\nwill offer you options, e.g. \"Same email: Wilma Flintstone\", or \"Similar name:\nBetty Rubble\".  Also it only shows you distinct sets of first, last names and emails. So if your\ndata has a bunch of records from Wilma Flintstone, you'll only have to locate\nWilma once.  When everything is matched up, you can download the CSV file again, which will\nbe the same file as you fed into it, but now it has an extra \"Internal ID\"\ncolumn with the CiviCRM Contact ID populated.  Then  you can use that in CiviCRM's normal import routines for contacts,\nactivities, contributions...",
            "title": "How does it help?"
        },
        {
            "location": "/#sound-good",
            "text": "See  Installation  and then jump across to  Usage",
            "title": "Sound good?"
        },
        {
            "location": "/#artful-robot-wrote-this",
            "text": "That's me. I'm a UK based developer stitching together open source technologies\nto make websites and databases that help people and organisations change the world.  You can hire me if you like :-) My website's  artfulrobot.uk",
            "title": "Artful Robot wrote this"
        },
        {
            "location": "/installation/",
            "text": "Installing and Requirements\n\n\nRequirements\n\n\nThis extension has been written against CiviCRM 4.7 with PHP 5.6 (multibyte\nstring functions required) and MariaDB 10.0 (MariaDB is a drop-in replacement\nfor MySQL that I have found to be more performant than MySQL for CiviCRM, a\nrecent version of MySQL should work just as well), it requires InnoDB and UTF-8\nsupport.\n\n\nI have also found it to work with 4.6.24.\n\n\nI have used it in Drupal and Wordpress setups.\n\n\nAny problems running against other versions please \nsubmit an\nissue\n and ideally\na pull request :-)\n\n\nDownload and install the extension\n\n\nYou can install this extension in the normal way.\n\n\nIt's now listed on the CiviCRM Extensions directory: \nCSV Import\nHelper\n but until this makes\nit onto your own database's extensions page, this means grab the latest release code from the\ngithub repo, at\n\nhttps://github.com/artfulrobot/uk.artfulrobot.civicrm.importhelper/releases\n\n\nFrom that page you can either download a ZIP/tgz file, or clone the repo if\nyou're familiar with Git.\n\n\nAnwyay, you want to end up with a directory called\n\nuk.artfulrobot.civicrm.importhelper\n within your CiviCRM extensions directory.\n\n\nThen visit \nCiviCRM \u00bb Administer \u00bb System Settings \u00bb Extensions\n and install it.",
            "title": "Installation"
        },
        {
            "location": "/installation/#installing-and-requirements",
            "text": "",
            "title": "Installing and Requirements"
        },
        {
            "location": "/installation/#requirements",
            "text": "This extension has been written against CiviCRM 4.7 with PHP 5.6 (multibyte\nstring functions required) and MariaDB 10.0 (MariaDB is a drop-in replacement\nfor MySQL that I have found to be more performant than MySQL for CiviCRM, a\nrecent version of MySQL should work just as well), it requires InnoDB and UTF-8\nsupport.  I have also found it to work with 4.6.24.  I have used it in Drupal and Wordpress setups.  Any problems running against other versions please  submit an\nissue  and ideally\na pull request :-)",
            "title": "Requirements"
        },
        {
            "location": "/installation/#download-and-install-the-extension",
            "text": "You can install this extension in the normal way.  It's now listed on the CiviCRM Extensions directory:  CSV Import\nHelper  but until this makes\nit onto your own database's extensions page, this means grab the latest release code from the\ngithub repo, at https://github.com/artfulrobot/uk.artfulrobot.civicrm.importhelper/releases  From that page you can either download a ZIP/tgz file, or clone the repo if\nyou're familiar with Git.  Anwyay, you want to end up with a directory called uk.artfulrobot.civicrm.importhelper  within your CiviCRM extensions directory.  Then visit  CiviCRM \u00bb Administer \u00bb System Settings \u00bb Extensions  and install it.",
            "title": "Download and install the extension"
        },
        {
            "location": "/usage/",
            "text": "Usage\n\n\nIt's pretty easy, but below is a worked example to get you feeling confident.\nThe steps are:\n\n\n\n\n\n\nDo a little initial tweaking of your spreadsheet and save as CSV.\n\n\n\n\n\n\nUpload your CSV spreadsheet and process it.\n\n\n\n\n\n\nDownload the new version with the matched contacts.\n\n\n\n\n\n\nInitial tweaking\n\n\nYou need to make the first four columns of your spreadsheet contain, in this\norder:\n\n\n\n\nTitle\n\n\nFirst name (can be the only name field)\n\n\nLast name\n\n\nEmail\n\n\n\n\nSo you probably need to rearrange your spreadsheet columns a bit to fit. \nDon't\nworry if some of these are blank\n - e.g. if you don't have titles, names or\nemails for some rows. Obviously you'll need \nsomething\n in there, but it's fine\nif your data just has emails, or just has names, for example.\n\n\nNb. If your data has a single \"Name\" column instead of separate first and last\nnames, stick that in column 2 (or \"B\" in spreadsheet-speak) - the one for first name.\n\n\nExample\n\n\n\n\nThis is an example dataset for the purposes of explaining how this works. Notes on this example data set:\n\n\n\n\n\n\nThe first row starts with the correct column order, as above, and continues\n   with whatever data the file holds - beyond the first four columns doesn't\n   matter. Also note that it doesn't matter what the exact text in the column\n   headers are, here we have \nfname\n but it could say \nfirst\n or \nFirst Name\n or\n   whatever.\n\n\n\n\n\n\nRow 2, Wilma, is an example of someone not in the database.\n\n\n\n\n\n\nRow 3, Claudio is in the database and this row and...\n\n\n\n\n\n\n...row 4 also belong to him.\n\n\n\n\n\n\nRow 5, Iris is missing a last name but her email is in the database.\n\n\n\n\n\n\nRow 6 has the whole name in the first name column.\n\n\n\n\n\n\nRob 7, betty: There's no match in the databse for her full name, but there\n   are a few Ivanovs.\n\n\n\n\n\n\nUpload and process\n\n\nYou should find a new menu item \nCiviCRM \u00bb Contacts \u00bb CSV Import Helper\n,\nclick that.\n\n\n\n\nClick Browse and find your CSV file. This should then automatically begin to be\nuploaded (the status is displayed in the top right of the screen). Once\nuploaded you should be moved to the Process Records tab.\n\n\n\n\nWhat's it showing?\n\n\nThe \nWho\n column shows the name and email from the uploaded data. It also shows\nin brackets how many rows in the input data belong to that person. The second\ncolumn shows which contact matches in the database - this is linked to their\ncontact record so it's easy to check details if needed.\n\n\nOf note:\n\n\n\n\n\n\nWilma Flintstone\n is listed as \"No matches\". We expected that, she's new to\n   us.\n\n\n\n\n\n\nClaudio\n has a \n(2)\n in the Who column because there are two rows in the input\n   data that belong to him. This is a very useful feature if you have a lot of\n   records relating to the same person! He has been located as an existing\n   contact and the name from CiviCRM is shown in the Resolution column. The\n   resolution column also has \n(187)\n which is that contact's CiviCRM internal\n   contact ID.\n\n\n\n\n\n\nIris\n has been identified (by her email) as one Iris Grant.\n\n\n\n\n\n\nBrigette\n has been identified, too. The extension was able to separate out her\n   first and last names OK.\n\n\n\n\n\n\nBetty\n was not uniqely identified, but it found several other contacts with\n   the same last name. Nb. if it finds more than 10 'similar' contacts it just\n   says so because it would be unhelpful to list every person just because they\n   have a popular last name.\n\n\n\n\n\n\nWhat to do now?\n\n\nThe aim of the game is to turn all rows green! Join in, it's fun!\n\n\n\"No matches\"\n\n\nEither you want to add a new person into your database, or you need to help the\nextension find the right person yourself. For the second case (sometimes you\nknow something the database does not, like a change of name, or a different\nemail address) you can select a contact using the \nSelect Contact\n widget.\n\n\nOtherwise you can use the \nCreate Missing Contacts\n button which will create new\nIndividuals (no, you can't use this for Organisations) for all the rows that say\n\nNo Matches\n, in this case just one. Typically you'd leave pressing that button\nuntil you had checked the whole dataset.\n\n\n\"Found\"\n\n\nJob done! However, if you think the extension got it wrong you can click the\n\nChange\n button which will allow you to select a different contact (or leave it\nunmatched).\n\n\n\"Several candidates found\"\n\n\nIf one of the ones listed is right you can click the \nChoose\n button. Otherwise\nyou can use the \nSelect Contact\n widget to find the person yourself.\n\n\nWhat else?\n\n\nIf you've selected a contact you can \"Reset\" this decision and choose a\ndifferent one with the \nReset\n button that appears once you've made a choice.\n\n\nWhat does the Re-check button do?\n\n\nSometimes while working with import data you notice things about your existing\ndata and make updates. e.g. you might choose to merge two duplicate contacts.\nThis will mess up the guesses in the \nResolutions\n column as the exension won't know that\nyou've done this and could still be offering contacts that don't exist any more!\nDi-sa-ster, darling. That's what the \nRe-check\n button is for. It will look for\nmatches for all rows that aren't selected (green).\n\n\nDo I \nhave to\n make it all green?\n\n\nNope. If you don't select a contact then when you download the output\nspreadsheet it will just have a blank in the Internal ID column.\n\n\nDownload the new CSV file!\n\n\nFinally you can visit the \nDownload\n tab:\n\n\n\n\nThere's two buttons:\n\n\n\n\n\n\nDownload CSV\n - get your new file\n\n\n\n\n\n\nDelete Uploaded CSV data\n - deletes the copy of data you uploaded. You should\n   always do this after you've successfully downloaded the matched data.\n\n\n\n\n\n\nThe outputted spreadsheet\n\n\n\n\n\n\n\n\nIt has the Internal ID from CiviCRM as the first column.\n\n\n\n\n\n\nThe title, first, last name columns are sort of duplicated with the original\n   columns following. This is a bit weird, but it's useful to see (and possibly\n   fix) how the extension has separated out names, e.g. Brigette.\n\n\n\n\n\n\nThe rest of the columns should be exactly as they were.\n\n\n\n\n\n\nYou can then import that using CiviCRM's built-in import tools, the use of which\nis out of scope for this documentation.\n\n\nEnjoy!\n\n\nRich Lott / \nArtful Robot",
            "title": "Usage"
        },
        {
            "location": "/usage/#usage",
            "text": "It's pretty easy, but below is a worked example to get you feeling confident.\nThe steps are:    Do a little initial tweaking of your spreadsheet and save as CSV.    Upload your CSV spreadsheet and process it.    Download the new version with the matched contacts.",
            "title": "Usage"
        },
        {
            "location": "/usage/#initial-tweaking",
            "text": "You need to make the first four columns of your spreadsheet contain, in this\norder:   Title  First name (can be the only name field)  Last name  Email   So you probably need to rearrange your spreadsheet columns a bit to fit.  Don't\nworry if some of these are blank  - e.g. if you don't have titles, names or\nemails for some rows. Obviously you'll need  something  in there, but it's fine\nif your data just has emails, or just has names, for example.  Nb. If your data has a single \"Name\" column instead of separate first and last\nnames, stick that in column 2 (or \"B\" in spreadsheet-speak) - the one for first name.  Example   This is an example dataset for the purposes of explaining how this works. Notes on this example data set:    The first row starts with the correct column order, as above, and continues\n   with whatever data the file holds - beyond the first four columns doesn't\n   matter. Also note that it doesn't matter what the exact text in the column\n   headers are, here we have  fname  but it could say  first  or  First Name  or\n   whatever.    Row 2, Wilma, is an example of someone not in the database.    Row 3, Claudio is in the database and this row and...    ...row 4 also belong to him.    Row 5, Iris is missing a last name but her email is in the database.    Row 6 has the whole name in the first name column.    Rob 7, betty: There's no match in the databse for her full name, but there\n   are a few Ivanovs.",
            "title": "Initial tweaking"
        },
        {
            "location": "/usage/#upload-and-process",
            "text": "You should find a new menu item  CiviCRM \u00bb Contacts \u00bb CSV Import Helper ,\nclick that.   Click Browse and find your CSV file. This should then automatically begin to be\nuploaded (the status is displayed in the top right of the screen). Once\nuploaded you should be moved to the Process Records tab.   What's it showing?  The  Who  column shows the name and email from the uploaded data. It also shows\nin brackets how many rows in the input data belong to that person. The second\ncolumn shows which contact matches in the database - this is linked to their\ncontact record so it's easy to check details if needed.  Of note:    Wilma Flintstone  is listed as \"No matches\". We expected that, she's new to\n   us.    Claudio  has a  (2)  in the Who column because there are two rows in the input\n   data that belong to him. This is a very useful feature if you have a lot of\n   records relating to the same person! He has been located as an existing\n   contact and the name from CiviCRM is shown in the Resolution column. The\n   resolution column also has  (187)  which is that contact's CiviCRM internal\n   contact ID.    Iris  has been identified (by her email) as one Iris Grant.    Brigette  has been identified, too. The extension was able to separate out her\n   first and last names OK.    Betty  was not uniqely identified, but it found several other contacts with\n   the same last name. Nb. if it finds more than 10 'similar' contacts it just\n   says so because it would be unhelpful to list every person just because they\n   have a popular last name.    What to do now?  The aim of the game is to turn all rows green! Join in, it's fun!  \"No matches\"  Either you want to add a new person into your database, or you need to help the\nextension find the right person yourself. For the second case (sometimes you\nknow something the database does not, like a change of name, or a different\nemail address) you can select a contact using the  Select Contact  widget.  Otherwise you can use the  Create Missing Contacts  button which will create new\nIndividuals (no, you can't use this for Organisations) for all the rows that say No Matches , in this case just one. Typically you'd leave pressing that button\nuntil you had checked the whole dataset.  \"Found\"  Job done! However, if you think the extension got it wrong you can click the Change  button which will allow you to select a different contact (or leave it\nunmatched).  \"Several candidates found\"  If one of the ones listed is right you can click the  Choose  button. Otherwise\nyou can use the  Select Contact  widget to find the person yourself.  What else?  If you've selected a contact you can \"Reset\" this decision and choose a\ndifferent one with the  Reset  button that appears once you've made a choice.  What does the Re-check button do?  Sometimes while working with import data you notice things about your existing\ndata and make updates. e.g. you might choose to merge two duplicate contacts.\nThis will mess up the guesses in the  Resolutions  column as the exension won't know that\nyou've done this and could still be offering contacts that don't exist any more!\nDi-sa-ster, darling. That's what the  Re-check  button is for. It will look for\nmatches for all rows that aren't selected (green).  Do I  have to  make it all green?  Nope. If you don't select a contact then when you download the output\nspreadsheet it will just have a blank in the Internal ID column.",
            "title": "Upload and process"
        },
        {
            "location": "/usage/#download-the-new-csv-file",
            "text": "Finally you can visit the  Download  tab:   There's two buttons:    Download CSV  - get your new file    Delete Uploaded CSV data  - deletes the copy of data you uploaded. You should\n   always do this after you've successfully downloaded the matched data.    The outputted spreadsheet     It has the Internal ID from CiviCRM as the first column.    The title, first, last name columns are sort of duplicated with the original\n   columns following. This is a bit weird, but it's useful to see (and possibly\n   fix) how the extension has separated out names, e.g. Brigette.    The rest of the columns should be exactly as they were.    You can then import that using CiviCRM's built-in import tools, the use of which\nis out of scope for this documentation.  Enjoy!  Rich Lott /  Artful Robot",
            "title": "Download the new CSV file!"
        },
        {
            "location": "/wishlist/",
            "text": "Wishlist / Bugs / Issues?\n\n\nHere's some features I think might be useful. If you want these please create a\nfeature request in the \nIssue\nqueue\n.\nIf you can \nsubmit a PR\n,\neven better! Or if you want to \nhire me to develop a new\nfeature\n, just ask and I'll do you a quote.\n\n\n\n\n\n\nAdd a button to create a new contact when there's several similar candidates.\n\n\n\n\n\n\nUse it with organisations as well as individuals.\n\n\n\n\n\n\nAdd a \"Make new contact\" button on a per-row basis, instead or as well as the\n  button that does it for \nall\n missing contacts at once.\n\n\n\n\n\n\nIt would be nice to have an option to insert names from CiviCRM's into the\n  outputted name columns instead of the input data.",
            "title": "Wishlist"
        },
        {
            "location": "/wishlist/#wishlist-bugs-issues",
            "text": "Here's some features I think might be useful. If you want these please create a\nfeature request in the  Issue\nqueue .\nIf you can  submit a PR ,\neven better! Or if you want to  hire me to develop a new\nfeature , just ask and I'll do you a quote.    Add a button to create a new contact when there's several similar candidates.    Use it with organisations as well as individuals.    Add a \"Make new contact\" button on a per-row basis, instead or as well as the\n  button that does it for  all  missing contacts at once.    It would be nice to have an option to insert names from CiviCRM's into the\n  outputted name columns instead of the input data.",
            "title": "Wishlist / Bugs / Issues?"
        }
    ]
}